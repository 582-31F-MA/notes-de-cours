////////////////////////////////////////////////////////////////////////////////
// document.createElement //////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
// Dans un document HTML, la méthode `document.createElement()` crée un élément
// HTML du type spécifié par `tagName` ou un `HTMLUnknownElement` si `tagName`
// n'est pas reconnu.
//
//////////
// SYNTAXE
//
// const element = document.createElement(tagName[, options]);
//
//////////
// EXEMPLE
//
// const newButtonEl = document.createElement("button");
// console.log(newButtonEl);
//
////////////////////////////////////////////////////////////////////////////////
// document.createTextNode /////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
// Crée un nouveau nœud de texte.
//
// //////////
// SYNTAXE
//
// const text = document.createTextNode(données);
//
//////////
// EXEMPLE
//
// const newButtonText = document.createTextNode("Je suis un bouton");
// console.log(newButtonText);
//
////////////////////////////////////////////////////////////////////////////////
// element.appendChild /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
// La méthode `Node.appendChild()` ajoute un nœud à la fin de la liste des
// enfants d'un nœud parent spécifié. Si l'enfant donné est une référence à un
// nœud existant dans le document, `appendChild()` le déplace de sa position
// actuelle vers une nouvelle position.
//
//////////
// SYNTAXE
//
// const elementAjoute = element.appendChild(enfant);
//
//////////
// EXEMPLE
//
// const newButtonEl = document.createElement("button");
// const newButtonText = document.createTextNode("Je suis un bouton");
// newButtonEl.appendChild(newButtonText);
//
// const mainEl = document.querySelector("main");
// mainEl.appendChild(newButtonEl);
//
////////////////////////////////////////////////////////////////////////////////
// element.removeChild /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
// La méthode `Node.removeChild()` retire un nœud enfant de l'arbre DOM et
// retourne le nœud retiré.
//
//////////
// SYNTAXE
//
// const enfant = node.removeChild(child);
//
//////////
// EXEMPLE
//
//
////////////////////////////////////////////////////////////////////////////////
// element.cloneNode ///////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
// La méthode `Node.cloneNode()` renvoie une copie du nœud sur lequel elle a été
// appelée.
//
//////////
// SYNTAXE
//
// const dupNode = node.cloneNode([deep]);
//
//////////
// EXEMPLE
//
//
////////////////////////////////////////////////////////////////////////////////
// RESSOURCES //////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
// - https://developer.mozilla.org/fr/docs/Web/API/Document/createElement
// - https://developer.mozilla.org/fr/docs/Web/API/Document/createTextNode
// - https://developer.mozilla.org/fr/docs/Web/API/Node/appendChild
// - https://developer.mozilla.org/fr/docs/Web/API/Node/removeChild
// - https://developer.mozilla.org/fr/docs/Web/API/Node/cloneNode
